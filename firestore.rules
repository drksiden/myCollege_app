rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Вспомогательные функции (без изменений)
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isTeacher() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher';
    }
    
    function isStudent() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'student';
    }

    function isGroupCurator(groupId) {
      return request.auth != null && 
        get(/databases/$(database)/documents/groups/$(groupId)).data.curatorId == request.auth.uid;
    }

    function isGroupTeacher(groupId) {
      let group = get(/databases/$(database)/documents/groups/$(groupId)).data;
      return request.auth != null && 
        group.subjects.hasAny([{'teacherId': request.auth.uid}]);
    }

    // Правила для коллекции schedules
    match /schedules/{scheduleId} {
      allow read: if isAuthenticated(); // Все аутентифицированные пользователи могут читать расписание
      allow write: if isAdmin() || isTeacher(); // Только админы и учителя могут изменять расписание
    }

    // Правила для коллекции users
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin() || isTeacher();
    }

    // Правила для коллекции groups
    match /groups/{groupId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin() || isTeacher();
      
      // Правила для подколлекции schedule
      match /schedule/{scheduleId} {
        allow read: if isAuthenticated();
        allow write: if isAdmin() || isTeacher();
      }
    }

    // Правила для коллекции subjects
    match /subjects/{subjectId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin() || isTeacher();
    }

    // --- Оценки (grades) ---
    match /grades/{gradeId} {
      allow read: if isAuthenticated() && 
        (isAdmin() || 
         isTeacher() || 
         (isStudent() && resource.data.studentId == request.auth.uid));
      allow write: if isAdmin() || isTeacher();
    }

    // --- Посещаемость (attendance) ---
    match /attendance/{attendanceId} {
      allow read: if isAuthenticated() && 
        (isAdmin() || 
         isTeacher() || 
         (isStudent() && resource.data.studentId == request.auth.uid));
      allow write: if isAdmin() || isTeacher();
    }

    // --- Задания (assignments) ---
    match /assignments/{assignmentId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin() || isTeacher();
    }

    // --- Чаты (chats) и Сообщения (messages) ---
    match /chats/{chatId} {
      allow read, write: if isAuthenticated() && (isAdmin() || isTeacher() || request.auth.uid in resource.data.participantIds);
    }

    match /chats/{chatId}/messages/{messageId} {
      allow read, write: if isAuthenticated() && 
                           (isAdmin() || isTeacher() || request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participantIds);
    }

    // --- Статистика (statistics) ---
    match /statistics/{statDoc} {
      allow read: if isAuthenticated();
      allow write: if isAdmin() || isTeacher();
    }
    
    // --- ОБЩЕЕ ПРАВИЛО ДЛЯ ПОЛНОГО ДОСТУПА УЧИТЕЛЕЙ ---
    match /{document=**} {
      allow read, write: if isAdmin() || isTeacher();
    }
  }
} 